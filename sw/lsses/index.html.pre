<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
    <head>
        <title>Java DTrace Toolkit</title>
        <meta name="Author" content="Georgios Gousios"/>
        <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
        <link rel="stylesheet" href="../../homepage.css" type="text/css"/>
        <link rel="shortcut icon" href="favicon.ico"/>
    </head>
    <body>
        <!--incl:MENU--> 
        <div id="body" class="body">
            <h2>Performing Large Scale Software Engineering Studies</h2>

         <p>

         In our work <em>Performing Large Scale Software Engineering
             Studies</em>, we examine why we must perform large scale studies
         and how we can do them using 
         <a href="http://www.sqo-oss.org">Alitheia Core</a>. 
         
         In our work, we used Alitheia Core, <a
             href="http://git-scm.com/">Git</a> revision <a
             href="http://git.sqo-oss.org/?p=sqo-oss.git;a=commit;h=88a6fcc6d15aac911aba710ea8a30e2a9a166443">88a6fcc6d15aac911aba710ea8a30e2a9a166443</a>.
         <em>(Note that after this revision, Alitheia Core data schema changed,
             so the datasets we provide will not work.)</em> 

         Using it, we processed two data sets:
        
        </p>

        <ui>
            
            <li>The <a href=""> Alitheia Core shared dataset</a> This dataset
            was used to conduct the two case studies. It was prepared </li>
            
        <li>A <a href="https://pithos.grnet.gr/pithos/rest/gousiosg@aueb.gr/files/public/testdata.gz">four project</a> dataset, which we distribute hoping
                it will become a standardised testbed for developing new ideas.
                This dataset includes both raw data and Alitheia Core metadata
                from running the first updater stage for the four projects we
                describe in our work (JConvert, Gnome-VFS, Evolution and FreeBSD).

            </li>
        </ui>

        <h3>Using the datasets</h3>
        <p>      

            Both datasets are essentially MySQL dumps. To use them with Alitheia
            Core, do the following (the instructions assume a Unix-like OS) :
        </p>

        <ol>
            <li><a href="http://www.sqo-oss.org/download">Download</a> 
                and <a href="http://www.sqo-oss.org/quickstart">install</a> 
                Alitheia Core. Alternatively, you can download the Alitheia Core
                <a href="http://www.sqo-oss.org/download/vm">virtual machine</a>
                and use it to import the provided data. The virtual machine 
                appliance follows the Open Virtualization Format specification,
                so it may be able to be hosted in (and scale) cloud 
                installations, such as the Amazon EC2 service (untested).
            </li>

            <li>Load either dump in the MySQL database. This can be done using
                the following command:

                <pre>
cat dump.sql |mysql -u alitheia -p alitheia                
                </pre>
             
            </li>

            <li>The raw data for the four project dataset need to be placed (or symlinked) at <code>/home/data</code></li>

            <li>Alitheia Core uses the machine's name to register it as a node
                in a cluster installation. Projects are always assigned to a
                cluster node, through an entry in the
                <code>CLUSTERNODE_PROJECT</code> table. This means that by 
                default Alitheia Core will not be able to use the imported data
                as the projects are assigned to another (our) machine. To fix 
                this, start Alitheia Core and open a connection to MySQL. Then
                do 

                <pre>
mysql> select * from CLUSTERNODE;
+----------------+------------------+
| CLUSTERNODE_ID | CLUSTERNODE_NAME |
+----------------+------------------+
|              9 | alitheia         |
|              x | your.hostname    |
+----------------+------------------+
mysql> UPDATE CLUSTERNODE_PROJECT set CLUSTERNODE_ID=x;
Query OK, 511 rows affected (0.10 sec)
Rows matched: 538  Changed: 511  Warnings: 0
                </pre>

            
            </li>

            <li>Alitheia Core should now be able to process the data. To test the
                installation, start Alitheia Core, install a plug-in in the
                plug-ins page, go to the projects page, select a project and click
                Synchronize in the plug-in dialog. Check whether the jobs 
                number is reducing and whether the failed jobs count is 0 or 
                at least very low.
            </li>

        </ol>

    </div>
    <!--incl:FOOTER-->
</body>
</html>
